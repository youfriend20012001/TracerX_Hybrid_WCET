KLEE: output directory is "/home/minhtan/Dropbox/NUS/klee-eclipse/examples/get_sign/klee-out-337"
Using STP solver backend
Call External Functions  call void @klee_make_symbolic(i8* %2, i64 6, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
Call External Functions  call void @klee_make_symbolic(i8* %3, i64 6, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
Call External Functions  %4 = call i32 (i32, [6 x i8]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i8]*, i64, ...)*)(i32 1, [6 x i8]* %key, i64 6)
State End  : 1
  %1 = alloca i32, align 4
  %key = alloca [6 x i8], align 1
  %attempt = alloca [6 x i8], align 1
  %pseduoKey = alloca [6 x i8], align 1
  store i32 0, i32* %1
  %2 = bitcast [6 x i8]* %key to i8*
  call void @klee_make_symbolic(i8* %2, i64 6, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = bitcast [6 x i8]* %attempt to i8*
  call void @klee_make_symbolic(i8* %3, i64 6, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32, [6 x i8]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i8]*, i64, ...)*)(i32 1, [6 x i8]* %key, i64 6)
  %5 = getelementptr inbounds [6 x i8]* %pseduoKey, i64 0, i64 0
  %6 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 0
  %7 = load i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = add nsw i32 %8, 1
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %5
  %11 = getelementptr inbounds i8* %5, i64 1
  %12 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 1
  %13 = load i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = add nsw i32 %14, 1
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %11
  %17 = getelementptr inbounds i8* %11, i64 1
  %18 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 2
  %19 = load i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = add nsw i32 %20, 1
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %17
  %23 = getelementptr inbounds i8* %17, i64 1
  %24 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 3
  %25 = load i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = add nsw i32 %26, 1
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %23
  %29 = getelementptr inbounds i8* %23, i64 1
  %30 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 4
  %31 = load i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = add nsw i32 %32, 1
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %29
  %35 = getelementptr inbounds i8* %29, i64 1
  %36 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 5
  %37 = load i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = add nsw i32 %38, 1
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %35
  %41 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i64 0
  %42 = load i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %49
  store i32 1, i32* %1
  br label %50
  %51 = load i32* %1
  ret i32 %51
Total Time : 127

Taint Path : 

State constraints :
array attempt[6] : w32 -> w8 = symbolic
(query [(Eq false
             (Slt 0
                  (SExt w32 (Read w8 0 attempt))))]
        false)

State End  : 2
  %1 = alloca i32, align 4
  %key = alloca [6 x i8], align 1
  %attempt = alloca [6 x i8], align 1
  %pseduoKey = alloca [6 x i8], align 1
  store i32 0, i32* %1
  %2 = bitcast [6 x i8]* %key to i8*
  call void @klee_make_symbolic(i8* %2, i64 6, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = bitcast [6 x i8]* %attempt to i8*
  call void @klee_make_symbolic(i8* %3, i64 6, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32, [6 x i8]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i8]*, i64, ...)*)(i32 1, [6 x i8]* %key, i64 6)
  %5 = getelementptr inbounds [6 x i8]* %pseduoKey, i64 0, i64 0
  %6 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 0
  %7 = load i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = add nsw i32 %8, 1
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %5
  %11 = getelementptr inbounds i8* %5, i64 1
  %12 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 1
  %13 = load i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = add nsw i32 %14, 1
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %11
  %17 = getelementptr inbounds i8* %11, i64 1
  %18 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 2
  %19 = load i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = add nsw i32 %20, 1
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %17
  %23 = getelementptr inbounds i8* %17, i64 1
  %24 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 3
  %25 = load i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = add nsw i32 %26, 1
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %23
  %29 = getelementptr inbounds i8* %23, i64 1
  %30 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 4
  %31 = load i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = add nsw i32 %32, 1
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %29
  %35 = getelementptr inbounds i8* %29, i64 1
  %36 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 5
  %37 = load i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = add nsw i32 %38, 1
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %35
  %41 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i64 0
  %42 = load i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %49
  %46 = getelementptr inbounds [6 x i8]* %pseduoKey, i32 0, i32 0
  %47 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i32 0
  %48 = call i32 @isEqual(i8* %46, i8* %47)
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %digesta, i8** %2, align 8
  store i8* %digestb, i8** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  store i32 0, i32* %1
  br label %26
  %27 = load i32* %1
  ret i32 %27
  store i32 %48, i32* %1
  br label %50
  %51 = load i32* %1
  ret i32 %51
Total Time : 200

Taint Path : 

State constraints :
array key[6] : w32 -> w8 = symbolic
array attempt[6] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(SExt w32 (Read w8 0 attempt)))
         
         (Eq false
             (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                                  (SExt w32 (Read w8 0 key)))))
                 N0))]
        false)

Enter restructure mode 10095
End restructure mode 200
State End  : 3
  %1 = alloca i32, align 4
  %key = alloca [6 x i8], align 1
  %attempt = alloca [6 x i8], align 1
  %pseduoKey = alloca [6 x i8], align 1
  store i32 0, i32* %1
  %2 = bitcast [6 x i8]* %key to i8*
  call void @klee_make_symbolic(i8* %2, i64 6, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = bitcast [6 x i8]* %attempt to i8*
  call void @klee_make_symbolic(i8* %3, i64 6, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32, [6 x i8]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i8]*, i64, ...)*)(i32 1, [6 x i8]* %key, i64 6)
  %5 = getelementptr inbounds [6 x i8]* %pseduoKey, i64 0, i64 0
  %6 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 0
  %7 = load i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = add nsw i32 %8, 1
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %5
  %11 = getelementptr inbounds i8* %5, i64 1
  %12 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 1
  %13 = load i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = add nsw i32 %14, 1
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %11
  %17 = getelementptr inbounds i8* %11, i64 1
  %18 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 2
  %19 = load i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = add nsw i32 %20, 1
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %17
  %23 = getelementptr inbounds i8* %17, i64 1
  %24 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 3
  %25 = load i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = add nsw i32 %26, 1
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %23
  %29 = getelementptr inbounds i8* %23, i64 1
  %30 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 4
  %31 = load i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = add nsw i32 %32, 1
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %29
  %35 = getelementptr inbounds i8* %29, i64 1
  %36 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 5
  %37 = load i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = add nsw i32 %38, 1
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %35
  %41 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i64 0
  %42 = load i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %49
  %46 = getelementptr inbounds [6 x i8]* %pseduoKey, i32 0, i32 0
  %47 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i32 0
  %48 = call i32 @isEqual(i8* %46, i8* %47)
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %digesta, i8** %2, align 8
  store i8* %digestb, i8** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  store i32 0, i32* %1
  br label %26
  %27 = load i32* %1
  ret i32 %27
  store i32 %48, i32* %1
  br label %50
  %51 = load i32* %1
  ret i32 %51
Total Time : 246

Taint Path : 

State constraints :
array key[6] : w32 -> w8 = symbolic
array attempt[6] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(SExt w32 (Read w8 0 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 0 key)))))
             N0)
         
         (Eq false
             (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                                  (SExt w32 (Read w8 1 key)))))
                 (SExt w32 (Read w8 1 attempt))))]
        false)

State End  : 4
  %1 = alloca i32, align 4
  %key = alloca [6 x i8], align 1
  %attempt = alloca [6 x i8], align 1
  %pseduoKey = alloca [6 x i8], align 1
  store i32 0, i32* %1
  %2 = bitcast [6 x i8]* %key to i8*
  call void @klee_make_symbolic(i8* %2, i64 6, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = bitcast [6 x i8]* %attempt to i8*
  call void @klee_make_symbolic(i8* %3, i64 6, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32, [6 x i8]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i8]*, i64, ...)*)(i32 1, [6 x i8]* %key, i64 6)
  %5 = getelementptr inbounds [6 x i8]* %pseduoKey, i64 0, i64 0
  %6 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 0
  %7 = load i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = add nsw i32 %8, 1
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %5
  %11 = getelementptr inbounds i8* %5, i64 1
  %12 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 1
  %13 = load i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = add nsw i32 %14, 1
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %11
  %17 = getelementptr inbounds i8* %11, i64 1
  %18 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 2
  %19 = load i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = add nsw i32 %20, 1
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %17
  %23 = getelementptr inbounds i8* %17, i64 1
  %24 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 3
  %25 = load i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = add nsw i32 %26, 1
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %23
  %29 = getelementptr inbounds i8* %23, i64 1
  %30 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 4
  %31 = load i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = add nsw i32 %32, 1
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %29
  %35 = getelementptr inbounds i8* %29, i64 1
  %36 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 5
  %37 = load i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = add nsw i32 %38, 1
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %35
  %41 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i64 0
  %42 = load i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %49
  %46 = getelementptr inbounds [6 x i8]* %pseduoKey, i32 0, i32 0
  %47 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i32 0
  %48 = call i32 @isEqual(i8* %46, i8* %47)
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %digesta, i8** %2, align 8
  store i8* %digestb, i8** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  store i32 0, i32* %1
  br label %26
  %27 = load i32* %1
  ret i32 %27
  store i32 %48, i32* %1
  br label %50
  %51 = load i32* %1
  ret i32 %51
Total Time : 292

Taint Path : 

State constraints :
array key[6] : w32 -> w8 = symbolic
array attempt[6] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(SExt w32 (Read w8 0 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 0 key)))))
             N0)
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 1 key)))))
             (SExt w32 (Read w8 1 attempt)))
         
         (Eq false
             (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                                  (SExt w32 (Read w8 2 key)))))
                 (SExt w32 (Read w8 2 attempt))))]
        false)

State End  : 5
  %1 = alloca i32, align 4
  %key = alloca [6 x i8], align 1
  %attempt = alloca [6 x i8], align 1
  %pseduoKey = alloca [6 x i8], align 1
  store i32 0, i32* %1
  %2 = bitcast [6 x i8]* %key to i8*
  call void @klee_make_symbolic(i8* %2, i64 6, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = bitcast [6 x i8]* %attempt to i8*
  call void @klee_make_symbolic(i8* %3, i64 6, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32, [6 x i8]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i8]*, i64, ...)*)(i32 1, [6 x i8]* %key, i64 6)
  %5 = getelementptr inbounds [6 x i8]* %pseduoKey, i64 0, i64 0
  %6 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 0
  %7 = load i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = add nsw i32 %8, 1
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %5
  %11 = getelementptr inbounds i8* %5, i64 1
  %12 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 1
  %13 = load i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = add nsw i32 %14, 1
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %11
  %17 = getelementptr inbounds i8* %11, i64 1
  %18 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 2
  %19 = load i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = add nsw i32 %20, 1
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %17
  %23 = getelementptr inbounds i8* %17, i64 1
  %24 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 3
  %25 = load i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = add nsw i32 %26, 1
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %23
  %29 = getelementptr inbounds i8* %23, i64 1
  %30 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 4
  %31 = load i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = add nsw i32 %32, 1
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %29
  %35 = getelementptr inbounds i8* %29, i64 1
  %36 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 5
  %37 = load i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = add nsw i32 %38, 1
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %35
  %41 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i64 0
  %42 = load i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %49
  %46 = getelementptr inbounds [6 x i8]* %pseduoKey, i32 0, i32 0
  %47 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i32 0
  %48 = call i32 @isEqual(i8* %46, i8* %47)
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %digesta, i8** %2, align 8
  store i8* %digestb, i8** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  store i32 0, i32* %1
  br label %26
  %27 = load i32* %1
  ret i32 %27
  store i32 %48, i32* %1
  br label %50
  %51 = load i32* %1
  ret i32 %51
Total Time : 338

Taint Path : 

State constraints :
array key[6] : w32 -> w8 = symbolic
array attempt[6] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(SExt w32 (Read w8 0 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 0 key)))))
             N0)
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 1 key)))))
             (SExt w32 (Read w8 1 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 2 key)))))
             (SExt w32 (Read w8 2 attempt)))
         
         (Eq false
             (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                                  (SExt w32 (Read w8 3 key)))))
                 (SExt w32 (Read w8 3 attempt))))]
        false)

State End  : 6
  %1 = alloca i32, align 4
  %key = alloca [6 x i8], align 1
  %attempt = alloca [6 x i8], align 1
  %pseduoKey = alloca [6 x i8], align 1
  store i32 0, i32* %1
  %2 = bitcast [6 x i8]* %key to i8*
  call void @klee_make_symbolic(i8* %2, i64 6, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = bitcast [6 x i8]* %attempt to i8*
  call void @klee_make_symbolic(i8* %3, i64 6, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32, [6 x i8]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i8]*, i64, ...)*)(i32 1, [6 x i8]* %key, i64 6)
  %5 = getelementptr inbounds [6 x i8]* %pseduoKey, i64 0, i64 0
  %6 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 0
  %7 = load i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = add nsw i32 %8, 1
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %5
  %11 = getelementptr inbounds i8* %5, i64 1
  %12 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 1
  %13 = load i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = add nsw i32 %14, 1
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %11
  %17 = getelementptr inbounds i8* %11, i64 1
  %18 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 2
  %19 = load i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = add nsw i32 %20, 1
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %17
  %23 = getelementptr inbounds i8* %17, i64 1
  %24 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 3
  %25 = load i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = add nsw i32 %26, 1
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %23
  %29 = getelementptr inbounds i8* %23, i64 1
  %30 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 4
  %31 = load i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = add nsw i32 %32, 1
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %29
  %35 = getelementptr inbounds i8* %29, i64 1
  %36 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 5
  %37 = load i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = add nsw i32 %38, 1
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %35
  %41 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i64 0
  %42 = load i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %49
  %46 = getelementptr inbounds [6 x i8]* %pseduoKey, i32 0, i32 0
  %47 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i32 0
  %48 = call i32 @isEqual(i8* %46, i8* %47)
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %digesta, i8** %2, align 8
  store i8* %digestb, i8** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  store i32 0, i32* %1
  br label %26
  %27 = load i32* %1
  ret i32 %27
  store i32 %48, i32* %1
  br label %50
  %51 = load i32* %1
  ret i32 %51
Total Time : 384

Taint Path : 

State constraints :
array key[6] : w32 -> w8 = symbolic
array attempt[6] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(SExt w32 (Read w8 0 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 0 key)))))
             N0)
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 1 key)))))
             (SExt w32 (Read w8 1 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 2 key)))))
             (SExt w32 (Read w8 2 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 3 key)))))
             (SExt w32 (Read w8 3 attempt)))
         
         (Eq false
             (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                                  (SExt w32 (Read w8 4 key)))))
                 (SExt w32 (Read w8 4 attempt))))]
        false)

Enter restructure mode 200195
End restructure mode 300
Enter restructure mode 200195
End restructure mode 300
State End  : 7
  %1 = alloca i32, align 4
  %key = alloca [6 x i8], align 1
  %attempt = alloca [6 x i8], align 1
  %pseduoKey = alloca [6 x i8], align 1
  store i32 0, i32* %1
  %2 = bitcast [6 x i8]* %key to i8*
  call void @klee_make_symbolic(i8* %2, i64 6, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = bitcast [6 x i8]* %attempt to i8*
  call void @klee_make_symbolic(i8* %3, i64 6, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32, [6 x i8]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i8]*, i64, ...)*)(i32 1, [6 x i8]* %key, i64 6)
  %5 = getelementptr inbounds [6 x i8]* %pseduoKey, i64 0, i64 0
  %6 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 0
  %7 = load i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = add nsw i32 %8, 1
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %5
  %11 = getelementptr inbounds i8* %5, i64 1
  %12 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 1
  %13 = load i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = add nsw i32 %14, 1
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %11
  %17 = getelementptr inbounds i8* %11, i64 1
  %18 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 2
  %19 = load i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = add nsw i32 %20, 1
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %17
  %23 = getelementptr inbounds i8* %17, i64 1
  %24 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 3
  %25 = load i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = add nsw i32 %26, 1
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %23
  %29 = getelementptr inbounds i8* %23, i64 1
  %30 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 4
  %31 = load i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = add nsw i32 %32, 1
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %29
  %35 = getelementptr inbounds i8* %29, i64 1
  %36 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 5
  %37 = load i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = add nsw i32 %38, 1
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %35
  %41 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i64 0
  %42 = load i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %49
  %46 = getelementptr inbounds [6 x i8]* %pseduoKey, i32 0, i32 0
  %47 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i32 0
  %48 = call i32 @isEqual(i8* %46, i8* %47)
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %digesta, i8** %2, align 8
  store i8* %digestb, i8** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  store i32 0, i32* %1
  br label %26
  %27 = load i32* %1
  ret i32 %27
  store i32 %48, i32* %1
  br label %50
  %51 = load i32* %1
  ret i32 %51
Total Time : 430

Taint Path : 

State constraints :
array key[6] : w32 -> w8 = symbolic
array attempt[6] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(SExt w32 (Read w8 0 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 0 key)))))
             N0)
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 1 key)))))
             (SExt w32 (Read w8 1 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 2 key)))))
             (SExt w32 (Read w8 2 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 3 key)))))
             (SExt w32 (Read w8 3 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 4 key)))))
             (SExt w32 (Read w8 4 attempt)))
         
         (Eq false
             (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                                  (SExt w32 (Read w8 5 key)))))
                 (SExt w32 (Read w8 5 attempt))))]
        false)

State End  : 7
  %1 = alloca i32, align 4
  %key = alloca [6 x i8], align 1
  %attempt = alloca [6 x i8], align 1
  %pseduoKey = alloca [6 x i8], align 1
  store i32 0, i32* %1
  %2 = bitcast [6 x i8]* %key to i8*
  call void @klee_make_symbolic(i8* %2, i64 6, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = bitcast [6 x i8]* %attempt to i8*
  call void @klee_make_symbolic(i8* %3, i64 6, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32, [6 x i8]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i8]*, i64, ...)*)(i32 1, [6 x i8]* %key, i64 6)
  %5 = getelementptr inbounds [6 x i8]* %pseduoKey, i64 0, i64 0
  %6 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 0
  %7 = load i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = add nsw i32 %8, 1
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %5
  %11 = getelementptr inbounds i8* %5, i64 1
  %12 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 1
  %13 = load i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = add nsw i32 %14, 1
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %11
  %17 = getelementptr inbounds i8* %11, i64 1
  %18 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 2
  %19 = load i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = add nsw i32 %20, 1
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %17
  %23 = getelementptr inbounds i8* %17, i64 1
  %24 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 3
  %25 = load i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = add nsw i32 %26, 1
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %23
  %29 = getelementptr inbounds i8* %23, i64 1
  %30 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 4
  %31 = load i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = add nsw i32 %32, 1
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %29
  %35 = getelementptr inbounds i8* %29, i64 1
  %36 = getelementptr inbounds [6 x i8]* %key, i32 0, i64 5
  %37 = load i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = add nsw i32 %38, 1
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %35
  %41 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i64 0
  %42 = load i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %49
  %46 = getelementptr inbounds [6 x i8]* %pseduoKey, i32 0, i32 0
  %47 = getelementptr inbounds [6 x i8]* %attempt, i32 0, i32 0
  %48 = call i32 @isEqual(i8* %46, i8* %47)
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %digesta, i8** %2, align 8
  store i8* %digestb, i8** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8** %2, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %13, %19
  br i1 %20, label %21, label %22
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %25
  store i32 1, i32* %1
  br label %26
  %27 = load i32* %1
  ret i32 %27
  store i32 %48, i32* %1
  br label %50
  %51 = load i32* %1
  ret i32 %51
Total Time : 446

Taint Path : 

State constraints :
array key[6] : w32 -> w8 = symbolic
array attempt[6] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(SExt w32 (Read w8 0 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 0 key)))))
             N0)
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 1 key)))))
             (SExt w32 (Read w8 1 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 2 key)))))
             (SExt w32 (Read w8 2 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 3 key)))))
             (SExt w32 (Read w8 3 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 4 key)))))
             (SExt w32 (Read w8 4 attempt)))
         
         (Eq (SExt w32 (Extract w8 0 (Add w32 1
                                              (SExt w32 (Read w8 5 key)))))
             (SExt w32 (Read w8 5 attempt)))]
        false)


KLEE: done: total instructions = 257
KLEE: done: completed paths = 8
KLEE: done: generated tests = 8
