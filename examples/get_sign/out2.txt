KLEE: output directory is "/home/minhtan/Dropbox/NUS/klee-eclipse/examples/get_sign/klee-out-345"
Using STP solver backend
Call External Functions  %2 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %key, i64 24, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
Call External Functions  %3 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %attempt, i64 24, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
Call External Functions  %4 = call i32 (i32*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 (i32*, i64, i8*, ...)*)(i32* %test, i64 4, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0))
Call External Functions  %5 = call i32 (i32, [6 x i32]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i32]*, i64, ...)*)(i32 1, [6 x i32]* %key, i64 24)
State End  : 1
  %1 = alloca i32, align 4
  %key = alloca [6 x i32], align 16
  %attempt = alloca [6 x i32], align 16
  %test = alloca i32, align 4
  %advanceKey = alloca [6 x i32], align 16
  store i32 0, i32* %1
  %2 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %key, i64 24, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %attempt, i64 24, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 (i32*, i64, i8*, ...)*)(i32* %test, i64 4, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0))
  %5 = call i32 (i32, [6 x i32]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i32]*, i64, ...)*)(i32 1, [6 x i32]* %key, i64 24)
  %6 = getelementptr inbounds [6 x i32]* %advanceKey, i64 0, i64 0
  %7 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %8 = load i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %6
  %10 = getelementptr inbounds i32* %6, i64 1
  %11 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 1
  %12 = load i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %10
  %14 = getelementptr inbounds i32* %10, i64 1
  %15 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 2
  %16 = load i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %14
  %18 = getelementptr inbounds i32* %14, i64 1
  %19 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 3
  %20 = load i32* %19, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %18
  %22 = getelementptr inbounds i32* %18, i64 1
  %23 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 4
  %24 = load i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %22
  %26 = getelementptr inbounds i32* %22, i64 1
  %27 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 5
  %28 = load i32* %27, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %26
  %30 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i64 0
  %31 = load i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %42
  store i32 1, i32* %1
  br label %43
  %44 = load i32* %1
  ret i32 %44
Total Time : 115

Taint Path : 

State constraints :
array attempt[24] : w32 -> w8 = symbolic
(query [(Eq false
             (Slt 0
                  (ReadLSB w32 0 attempt)))]
        false)

State End  : 2
  %1 = alloca i32, align 4
  %key = alloca [6 x i32], align 16
  %attempt = alloca [6 x i32], align 16
  %test = alloca i32, align 4
  %advanceKey = alloca [6 x i32], align 16
  store i32 0, i32* %1
  %2 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %key, i64 24, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %attempt, i64 24, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 (i32*, i64, i8*, ...)*)(i32* %test, i64 4, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0))
  %5 = call i32 (i32, [6 x i32]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i32]*, i64, ...)*)(i32 1, [6 x i32]* %key, i64 24)
  %6 = getelementptr inbounds [6 x i32]* %advanceKey, i64 0, i64 0
  %7 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %8 = load i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %6
  %10 = getelementptr inbounds i32* %6, i64 1
  %11 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 1
  %12 = load i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %10
  %14 = getelementptr inbounds i32* %10, i64 1
  %15 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 2
  %16 = load i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %14
  %18 = getelementptr inbounds i32* %14, i64 1
  %19 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 3
  %20 = load i32* %19, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %18
  %22 = getelementptr inbounds i32* %18, i64 1
  %23 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 4
  %24 = load i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %22
  %26 = getelementptr inbounds i32* %22, i64 1
  %27 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 5
  %28 = load i32* %27, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %26
  %30 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i64 0
  %31 = load i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %42
  %34 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %35 = load i32* %34, align 4
  %int_cast_to_i64 = zext i32 1 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64)
  %1 = icmp ult i64 %shift, %bitWidth
  br i1 %1, label %3, label %2
  ret void
  %36 = shl i32 %35, 1
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %42
  store i32 1, i32* %1
  br label %43
  %44 = load i32* %1
  ret i32 %44
Total Time : 133

Taint Path : 

State constraints :
array key[24] : w32 -> w8 = symbolic
array attempt[24] : w32 -> w8 = symbolic
(query [(Slt 0
              (ReadLSB w32 0 attempt))
         
         (Eq false
             (Slt 1
                  (Shl w32 (ReadLSB w32 0 key)
                           1)))]
        false)

State End  : 3
  %1 = alloca i32, align 4
  %key = alloca [6 x i32], align 16
  %attempt = alloca [6 x i32], align 16
  %test = alloca i32, align 4
  %advanceKey = alloca [6 x i32], align 16
  store i32 0, i32* %1
  %2 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %key, i64 24, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %attempt, i64 24, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 (i32*, i64, i8*, ...)*)(i32* %test, i64 4, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0))
  %5 = call i32 (i32, [6 x i32]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i32]*, i64, ...)*)(i32 1, [6 x i32]* %key, i64 24)
  %6 = getelementptr inbounds [6 x i32]* %advanceKey, i64 0, i64 0
  %7 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %8 = load i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %6
  %10 = getelementptr inbounds i32* %6, i64 1
  %11 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 1
  %12 = load i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %10
  %14 = getelementptr inbounds i32* %10, i64 1
  %15 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 2
  %16 = load i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %14
  %18 = getelementptr inbounds i32* %14, i64 1
  %19 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 3
  %20 = load i32* %19, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %18
  %22 = getelementptr inbounds i32* %18, i64 1
  %23 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 4
  %24 = load i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %22
  %26 = getelementptr inbounds i32* %22, i64 1
  %27 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 5
  %28 = load i32* %27, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %26
  %30 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i64 0
  %31 = load i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %42
  %34 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %35 = load i32* %34, align 4
  %int_cast_to_i64 = zext i32 1 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64)
  %1 = icmp ult i64 %shift, %bitWidth
  br i1 %1, label %3, label %2
  ret void
  %36 = shl i32 %35, 1
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %42
  %39 = getelementptr inbounds [6 x i32]* %advanceKey, i32 0, i32 0
  %40 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i32 0
  %41 = call i32 @isEqual(i32* %39, i32* %40)
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %i = alloca i32, align 4
  store i32* %digesta, i32** %2, align 8
  store i32* %digestb, i32** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  store i32 0, i32* %1
  br label %24
  %25 = load i32* %1
  ret i32 %25
  store i32 %41, i32* %1
  br label %43
  %44 = load i32* %1
  ret i32 %44
Total Time : 204

Taint Path : 

State constraints :
array key[24] : w32 -> w8 = symbolic
array attempt[24] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 attempt))
         
         (Slt 1
              (Shl w32 N1:(ReadLSB w32 0 key)
                       1))
         
         (Eq false
             (Eq (Add w32 1 N1) N0))]
        false)

Enter restructure mode 10095
End restructure mode 200
State End  : 4
  %1 = alloca i32, align 4
  %key = alloca [6 x i32], align 16
  %attempt = alloca [6 x i32], align 16
  %test = alloca i32, align 4
  %advanceKey = alloca [6 x i32], align 16
  store i32 0, i32* %1
  %2 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %key, i64 24, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %attempt, i64 24, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 (i32*, i64, i8*, ...)*)(i32* %test, i64 4, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0))
  %5 = call i32 (i32, [6 x i32]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i32]*, i64, ...)*)(i32 1, [6 x i32]* %key, i64 24)
  %6 = getelementptr inbounds [6 x i32]* %advanceKey, i64 0, i64 0
  %7 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %8 = load i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %6
  %10 = getelementptr inbounds i32* %6, i64 1
  %11 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 1
  %12 = load i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %10
  %14 = getelementptr inbounds i32* %10, i64 1
  %15 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 2
  %16 = load i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %14
  %18 = getelementptr inbounds i32* %14, i64 1
  %19 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 3
  %20 = load i32* %19, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %18
  %22 = getelementptr inbounds i32* %18, i64 1
  %23 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 4
  %24 = load i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %22
  %26 = getelementptr inbounds i32* %22, i64 1
  %27 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 5
  %28 = load i32* %27, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %26
  %30 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i64 0
  %31 = load i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %42
  %34 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %35 = load i32* %34, align 4
  %int_cast_to_i64 = zext i32 1 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64)
  %1 = icmp ult i64 %shift, %bitWidth
  br i1 %1, label %3, label %2
  ret void
  %36 = shl i32 %35, 1
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %42
  %39 = getelementptr inbounds [6 x i32]* %advanceKey, i32 0, i32 0
  %40 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i32 0
  %41 = call i32 @isEqual(i32* %39, i32* %40)
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %i = alloca i32, align 4
  store i32* %digesta, i32** %2, align 8
  store i32* %digestb, i32** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  store i32 0, i32* %1
  br label %24
  %25 = load i32* %1
  ret i32 %25
  store i32 %41, i32* %1
  br label %43
  %44 = load i32* %1
  ret i32 %44
Total Time : 248

Taint Path : 

State constraints :
array key[24] : w32 -> w8 = symbolic
array attempt[24] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 attempt))
         
         (Slt 1
              (Shl w32 N1:(ReadLSB w32 0 key)
                       1))
         
         (Eq (Add w32 1 N1) N0)
         
         (Eq false
             (Eq (Add w32 1
                          (ReadLSB w32 4 key))
                 (ReadLSB w32 4 attempt)))]
        false)

State End  : 5
  %1 = alloca i32, align 4
  %key = alloca [6 x i32], align 16
  %attempt = alloca [6 x i32], align 16
  %test = alloca i32, align 4
  %advanceKey = alloca [6 x i32], align 16
  store i32 0, i32* %1
  %2 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %key, i64 24, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %attempt, i64 24, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 (i32*, i64, i8*, ...)*)(i32* %test, i64 4, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0))
  %5 = call i32 (i32, [6 x i32]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i32]*, i64, ...)*)(i32 1, [6 x i32]* %key, i64 24)
  %6 = getelementptr inbounds [6 x i32]* %advanceKey, i64 0, i64 0
  %7 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %8 = load i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %6
  %10 = getelementptr inbounds i32* %6, i64 1
  %11 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 1
  %12 = load i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %10
  %14 = getelementptr inbounds i32* %10, i64 1
  %15 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 2
  %16 = load i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %14
  %18 = getelementptr inbounds i32* %14, i64 1
  %19 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 3
  %20 = load i32* %19, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %18
  %22 = getelementptr inbounds i32* %18, i64 1
  %23 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 4
  %24 = load i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %22
  %26 = getelementptr inbounds i32* %22, i64 1
  %27 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 5
  %28 = load i32* %27, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %26
  %30 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i64 0
  %31 = load i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %42
  %34 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %35 = load i32* %34, align 4
  %int_cast_to_i64 = zext i32 1 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64)
  %1 = icmp ult i64 %shift, %bitWidth
  br i1 %1, label %3, label %2
  ret void
  %36 = shl i32 %35, 1
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %42
  %39 = getelementptr inbounds [6 x i32]* %advanceKey, i32 0, i32 0
  %40 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i32 0
  %41 = call i32 @isEqual(i32* %39, i32* %40)
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %i = alloca i32, align 4
  store i32* %digesta, i32** %2, align 8
  store i32* %digestb, i32** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  store i32 0, i32* %1
  br label %24
  %25 = load i32* %1
  ret i32 %25
  store i32 %41, i32* %1
  br label %43
  %44 = load i32* %1
  ret i32 %44
Total Time : 292

Taint Path : 

State constraints :
array key[24] : w32 -> w8 = symbolic
array attempt[24] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 attempt))
         
         (Slt 1
              (Shl w32 N1:(ReadLSB w32 0 key)
                       1))
         
         (Eq (Add w32 1 N1) N0)
         
         (Eq (Add w32 1
                      (ReadLSB w32 4 key))
             (ReadLSB w32 4 attempt))
         
         (Eq false
             (Eq (Add w32 1
                          (ReadLSB w32 8 key))
                 (ReadLSB w32 8 attempt)))]
        false)

State End  : 6
  %1 = alloca i32, align 4
  %key = alloca [6 x i32], align 16
  %attempt = alloca [6 x i32], align 16
  %test = alloca i32, align 4
  %advanceKey = alloca [6 x i32], align 16
  store i32 0, i32* %1
  %2 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %key, i64 24, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %attempt, i64 24, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 (i32*, i64, i8*, ...)*)(i32* %test, i64 4, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0))
  %5 = call i32 (i32, [6 x i32]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i32]*, i64, ...)*)(i32 1, [6 x i32]* %key, i64 24)
  %6 = getelementptr inbounds [6 x i32]* %advanceKey, i64 0, i64 0
  %7 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %8 = load i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %6
  %10 = getelementptr inbounds i32* %6, i64 1
  %11 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 1
  %12 = load i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %10
  %14 = getelementptr inbounds i32* %10, i64 1
  %15 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 2
  %16 = load i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %14
  %18 = getelementptr inbounds i32* %14, i64 1
  %19 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 3
  %20 = load i32* %19, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %18
  %22 = getelementptr inbounds i32* %18, i64 1
  %23 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 4
  %24 = load i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %22
  %26 = getelementptr inbounds i32* %22, i64 1
  %27 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 5
  %28 = load i32* %27, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %26
  %30 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i64 0
  %31 = load i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %42
  %34 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %35 = load i32* %34, align 4
  %int_cast_to_i64 = zext i32 1 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64)
  %1 = icmp ult i64 %shift, %bitWidth
  br i1 %1, label %3, label %2
  ret void
  %36 = shl i32 %35, 1
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %42
  %39 = getelementptr inbounds [6 x i32]* %advanceKey, i32 0, i32 0
  %40 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i32 0
  %41 = call i32 @isEqual(i32* %39, i32* %40)
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %i = alloca i32, align 4
  store i32* %digesta, i32** %2, align 8
  store i32* %digestb, i32** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  store i32 0, i32* %1
  br label %24
  %25 = load i32* %1
  ret i32 %25
  store i32 %41, i32* %1
  br label %43
  %44 = load i32* %1
  ret i32 %44
Total Time : 336

Taint Path : 

State constraints :
array key[24] : w32 -> w8 = symbolic
array attempt[24] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 attempt))
         
         (Slt 1
              (Shl w32 N1:(ReadLSB w32 0 key)
                       1))
         
         (Eq (Add w32 1 N1) N0)
         
         (Eq (Add w32 1
                      (ReadLSB w32 4 key))
             (ReadLSB w32 4 attempt))
         
         (Eq (Add w32 1
                      (ReadLSB w32 8 key))
             (ReadLSB w32 8 attempt))
         
         (Eq false
             (Eq (Add w32 1
                          (ReadLSB w32 12 key))
                 (ReadLSB w32 12 attempt)))]
        false)

State End  : 7
  %1 = alloca i32, align 4
  %key = alloca [6 x i32], align 16
  %attempt = alloca [6 x i32], align 16
  %test = alloca i32, align 4
  %advanceKey = alloca [6 x i32], align 16
  store i32 0, i32* %1
  %2 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %key, i64 24, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %attempt, i64 24, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 (i32*, i64, i8*, ...)*)(i32* %test, i64 4, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0))
  %5 = call i32 (i32, [6 x i32]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i32]*, i64, ...)*)(i32 1, [6 x i32]* %key, i64 24)
  %6 = getelementptr inbounds [6 x i32]* %advanceKey, i64 0, i64 0
  %7 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %8 = load i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %6
  %10 = getelementptr inbounds i32* %6, i64 1
  %11 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 1
  %12 = load i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %10
  %14 = getelementptr inbounds i32* %10, i64 1
  %15 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 2
  %16 = load i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %14
  %18 = getelementptr inbounds i32* %14, i64 1
  %19 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 3
  %20 = load i32* %19, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %18
  %22 = getelementptr inbounds i32* %18, i64 1
  %23 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 4
  %24 = load i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %22
  %26 = getelementptr inbounds i32* %22, i64 1
  %27 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 5
  %28 = load i32* %27, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %26
  %30 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i64 0
  %31 = load i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %42
  %34 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %35 = load i32* %34, align 4
  %int_cast_to_i64 = zext i32 1 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64)
  %1 = icmp ult i64 %shift, %bitWidth
  br i1 %1, label %3, label %2
  ret void
  %36 = shl i32 %35, 1
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %42
  %39 = getelementptr inbounds [6 x i32]* %advanceKey, i32 0, i32 0
  %40 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i32 0
  %41 = call i32 @isEqual(i32* %39, i32* %40)
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %i = alloca i32, align 4
  store i32* %digesta, i32** %2, align 8
  store i32* %digestb, i32** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  store i32 0, i32* %1
  br label %24
  %25 = load i32* %1
  ret i32 %25
  store i32 %41, i32* %1
  br label %43
  %44 = load i32* %1
  ret i32 %44
Total Time : 380

Taint Path : 

State constraints :
array key[24] : w32 -> w8 = symbolic
array attempt[24] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 attempt))
         
         (Slt 1
              (Shl w32 N1:(ReadLSB w32 0 key)
                       1))
         
         (Eq (Add w32 1 N1) N0)
         
         (Eq (Add w32 1
                      (ReadLSB w32 4 key))
             (ReadLSB w32 4 attempt))
         
         (Eq (Add w32 1
                      (ReadLSB w32 8 key))
             (ReadLSB w32 8 attempt))
         
         (Eq (Add w32 1
                      (ReadLSB w32 12 key))
             (ReadLSB w32 12 attempt))
         
         (Eq false
             (Eq (Add w32 1
                          (ReadLSB w32 16 key))
                 (ReadLSB w32 16 attempt)))]
        false)

State End  : 8
  %1 = alloca i32, align 4
  %key = alloca [6 x i32], align 16
  %attempt = alloca [6 x i32], align 16
  %test = alloca i32, align 4
  %advanceKey = alloca [6 x i32], align 16
  store i32 0, i32* %1
  %2 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %key, i64 24, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %attempt, i64 24, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 (i32*, i64, i8*, ...)*)(i32* %test, i64 4, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0))
  %5 = call i32 (i32, [6 x i32]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i32]*, i64, ...)*)(i32 1, [6 x i32]* %key, i64 24)
  %6 = getelementptr inbounds [6 x i32]* %advanceKey, i64 0, i64 0
  %7 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %8 = load i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %6
  %10 = getelementptr inbounds i32* %6, i64 1
  %11 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 1
  %12 = load i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %10
  %14 = getelementptr inbounds i32* %10, i64 1
  %15 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 2
  %16 = load i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %14
  %18 = getelementptr inbounds i32* %14, i64 1
  %19 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 3
  %20 = load i32* %19, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %18
  %22 = getelementptr inbounds i32* %18, i64 1
  %23 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 4
  %24 = load i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %22
  %26 = getelementptr inbounds i32* %22, i64 1
  %27 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 5
  %28 = load i32* %27, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %26
  %30 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i64 0
  %31 = load i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %42
  %34 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %35 = load i32* %34, align 4
  %int_cast_to_i64 = zext i32 1 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64)
  %1 = icmp ult i64 %shift, %bitWidth
  br i1 %1, label %3, label %2
  ret void
  %36 = shl i32 %35, 1
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %42
  %39 = getelementptr inbounds [6 x i32]* %advanceKey, i32 0, i32 0
  %40 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i32 0
  %41 = call i32 @isEqual(i32* %39, i32* %40)
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %i = alloca i32, align 4
  store i32* %digesta, i32** %2, align 8
  store i32* %digestb, i32** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  store i32 1, i32* %1
  br label %24
  %25 = load i32* %1
  ret i32 %25
  store i32 %41, i32* %1
  br label %43
  %44 = load i32* %1
  ret i32 %44
Total Time : 440

Taint Path : 

State constraints :
array key[24] : w32 -> w8 = symbolic
array attempt[24] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 attempt))
         
         (Slt 1
              (Shl w32 N1:(ReadLSB w32 0 key)
                       1))
         
         (Eq (Add w32 1 N1) N0)
         
         (Eq (Add w32 1
                      (ReadLSB w32 4 key))
             (ReadLSB w32 4 attempt))
         
         (Eq (Add w32 1
                      (ReadLSB w32 8 key))
             (ReadLSB w32 8 attempt))
         
         (Eq (Add w32 1
                      (ReadLSB w32 12 key))
             (ReadLSB w32 12 attempt))
         
         (Eq (Add w32 1
                      (ReadLSB w32 16 key))
             (ReadLSB w32 16 attempt))
         
         (Eq (Add w32 1
                      (ReadLSB w32 20 key))
             (ReadLSB w32 20 attempt))]
        false)

State End  : 8
  %1 = alloca i32, align 4
  %key = alloca [6 x i32], align 16
  %attempt = alloca [6 x i32], align 16
  %test = alloca i32, align 4
  %advanceKey = alloca [6 x i32], align 16
  store i32 0, i32* %1
  %2 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %key, i64 24, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))
  %3 = call i32 ([6 x i32]*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 ([6 x i32]*, i64, i8*, ...)*)([6 x i32]* %attempt, i64 24, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i32*, i64, i8*, ...)* bitcast (i32 (...)* @klee_make_symbolic to i32 (i32*, i64, i8*, ...)*)(i32* %test, i64 4, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0))
  %5 = call i32 (i32, [6 x i32]*, i64, ...)* bitcast (i32 (...)* @klee_set_taint to i32 (i32, [6 x i32]*, i64, ...)*)(i32 1, [6 x i32]* %key, i64 24)
  %6 = getelementptr inbounds [6 x i32]* %advanceKey, i64 0, i64 0
  %7 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %8 = load i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %6
  %10 = getelementptr inbounds i32* %6, i64 1
  %11 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 1
  %12 = load i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %10
  %14 = getelementptr inbounds i32* %10, i64 1
  %15 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 2
  %16 = load i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %14
  %18 = getelementptr inbounds i32* %14, i64 1
  %19 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 3
  %20 = load i32* %19, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %18
  %22 = getelementptr inbounds i32* %18, i64 1
  %23 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 4
  %24 = load i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %22
  %26 = getelementptr inbounds i32* %22, i64 1
  %27 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 5
  %28 = load i32* %27, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %26
  %30 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i64 0
  %31 = load i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %42
  %34 = getelementptr inbounds [6 x i32]* %key, i32 0, i64 0
  %35 = load i32* %34, align 4
  %int_cast_to_i64 = zext i32 1 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64)
  %1 = icmp ult i64 %shift, %bitWidth
  br i1 %1, label %3, label %2
  ret void
  %36 = shl i32 %35, 1
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %42
  %39 = getelementptr inbounds [6 x i32]* %advanceKey, i32 0, i32 0
  %40 = getelementptr inbounds [6 x i32]* %attempt, i32 0, i32 0
  %41 = call i32 @isEqual(i32* %39, i32* %40)
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %i = alloca i32, align 4
  store i32* %digesta, i32** %2, align 8
  store i32* %digestb, i32** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %4
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 6
  br i1 %6, label %7, label %23
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i32** %2, align 8
  %11 = getelementptr inbounds i32* %10, i64 %9
  %12 = load i32* %11, align 4
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32** %3, align 8
  %16 = getelementptr inbounds i32* %15, i64 %14
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %12, %17
  br i1 %18, label %19, label %20
  store i32 0, i32* %1
  br label %24
  %25 = load i32* %1
  ret i32 %25
  store i32 %41, i32* %1
  br label %43
  %44 = load i32* %1
  ret i32 %44
Total Time : 424

Taint Path : 

State constraints :
array key[24] : w32 -> w8 = symbolic
array attempt[24] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 attempt))
         
         (Slt 1
              (Shl w32 N1:(ReadLSB w32 0 key)
                       1))
         
         (Eq (Add w32 1 N1) N0)
         
         (Eq (Add w32 1
                      (ReadLSB w32 4 key))
             (ReadLSB w32 4 attempt))
         
         (Eq (Add w32 1
                      (ReadLSB w32 8 key))
             (ReadLSB w32 8 attempt))
         
         (Eq (Add w32 1
                      (ReadLSB w32 12 key))
             (ReadLSB w32 12 attempt))
         
         (Eq (Add w32 1
                      (ReadLSB w32 16 key))
             (ReadLSB w32 16 attempt))
         
         (Eq false
             (Eq (Add w32 1
                          (ReadLSB w32 20 key))
                 (ReadLSB w32 20 attempt)))]
        false)


KLEE: done: total instructions = 246
KLEE: done: completed paths = 9
KLEE: done: generated tests = 9
